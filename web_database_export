--
-- PostgreSQL database cluster dump
--

-- Started on 2025-01-08 16:17:54 EET

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE ohyeah;
ALTER ROLE ohyeah WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS PASSWORD 'SCRAM-SHA-256$4096:B7p3k8cKfwqTK7dv14xmeQ==$tHPh2BC0Af3DW3iOnNa02YOzmxoSC6NYFzx446bB4SA=:zMseKucIJzWMx/JtiiOEBR83hNIOhLd60V2egpYDnlU=';
CREATE ROLE test;
ALTER ROLE test WITH NOSUPERUSER INHERIT CREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE web;
ALTER ROLE web WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB LOGIN NOREPLICATION NOBYPASSRLS;

--
-- User Configurations
--


--
-- Role memberships
--

GRANT ohyeah TO web WITH ADMIN OPTION, INHERIT FALSE, SET FALSE GRANTED BY postgres;






--
-- Databases
--

--
-- Database "template1" dump
--

\connect template1

--
-- PostgreSQL database dump
--

-- Dumped from database version 17.2 (Ubuntu 17.2-1.pgdg24.04+1)
-- Dumped by pg_dump version 17.2 (Ubuntu 17.2-1.pgdg24.04+1)

-- Started on 2025-01-08 16:17:54 EET

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

-- Completed on 2025-01-08 16:17:54 EET

--
-- PostgreSQL database dump complete
--

--
-- Database "postgres" dump
--

\connect postgres

--
-- PostgreSQL database dump
--

-- Dumped from database version 17.2 (Ubuntu 17.2-1.pgdg24.04+1)
-- Dumped by pg_dump version 17.2 (Ubuntu 17.2-1.pgdg24.04+1)

-- Started on 2025-01-08 16:17:54 EET

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

-- Completed on 2025-01-08 16:17:54 EET

--
-- PostgreSQL database dump complete
--

--
-- Database "web" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 17.2 (Ubuntu 17.2-1.pgdg24.04+1)
-- Dumped by pg_dump version 17.2 (Ubuntu 17.2-1.pgdg24.04+1)

-- Started on 2025-01-08 16:17:54 EET

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 3618 (class 1262 OID 16390)
-- Name: web; Type: DATABASE; Schema: -; Owner: web
--

CREATE DATABASE web WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE_PROVIDER = libc LOCALE = 'en_US.UTF-8';


ALTER DATABASE web OWNER TO web;

\connect web

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 236 (class 1255 OID 19684)
-- Name: delete_diploma_status_history(); Type: FUNCTION; Schema: public; Owner: web
--

CREATE FUNCTION public.delete_diploma_status_history() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Διαγραφή όλων των εγγραφών από το Diploma_Status_History που συνδέονται με το διαγραφόμενο Diploma
    DELETE FROM Diploma_Status_History WHERE Diploma_ID = OLD.Diploma_ID;
    RETURN OLD;
END;
$$;


ALTER FUNCTION public.delete_diploma_status_history() OWNER TO web;

--
-- TOC entry 251 (class 1255 OID 19675)
-- Name: ensure_exam_date_rules(); Type: FUNCTION; Schema: public; Owner: web
--

CREATE FUNCTION public.ensure_exam_date_rules() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Λογική για INSERT
    IF TG_OP = 'INSERT' THEN
        -- Έλεγχος: Μπορούμε να εισάγουμε ημερομηνία μόνο αν η διπλωματική είναι στη κατάσταση 4
        IF NEW.Examination_Date IS NOT NULL AND NOT EXISTS (
            SELECT 1
            FROM Diploma_Status_History dsh
            WHERE dsh.Diploma_ID = NEW.Diploma_ID
              AND dsh.New_Status_ID = 4
              AND dsh.Change_Date = (
                  SELECT MAX(dsh_inner.Change_Date)
                  FROM Diploma_Status_History dsh_inner
                  WHERE dsh_inner.Diploma_ID = NEW.Diploma_ID
              )
        ) THEN
            RAISE EXCEPTION 'Ημερομηνία εξέτασης μπορεί να οριστεί μόνο εφόσον η διπλωματική είναι σε κατάσταση υποεξέταση.';
        END IF;
    END IF;

    -- Λογική για UPDATE
    IF TG_OP = 'UPDATE' THEN
        -- Έλεγχος: Αν αλλάζει το Examination_Date
        IF NEW.Examination_Date IS DISTINCT FROM OLD.Examination_Date THEN
            -- Έλεγχος: Μπορούμε να αλλάξουμε ημερομηνία μόνο αν η διπλωματική είναι στη κατάσταση 4
            IF NEW.Examination_Date IS NOT NULL AND NOT EXISTS (
                SELECT 1
                FROM Diploma_Status_History dsh
                WHERE dsh.Diploma_ID = NEW.Diploma_ID
                  AND dsh.New_Status_ID = 4
                  AND dsh.Change_Date = (
                      SELECT MAX(dsh_inner.Change_Date)
                      FROM Diploma_Status_History dsh_inner
                      WHERE dsh_inner.Diploma_ID = NEW.Diploma_ID
                  )
            ) THEN
                RAISE EXCEPTION 'Ημερομηνία εξέτασης μπορεί να τροποποιηθεί μόνο εφόσον η διπλωματική είναι σε κατάσταση υποεξέταση.';
            END IF;
        END IF;
    END IF;

    RETURN NEW;
END;
$$;


ALTER FUNCTION public.ensure_exam_date_rules() OWNER TO web;

--
-- TOC entry 250 (class 1255 OID 19673)
-- Name: ensure_grading_allowed(); Type: FUNCTION; Schema: public; Owner: web
--

CREATE FUNCTION public.ensure_grading_allowed() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Check if the diploma's Examination_Date is valid and in the past
    IF (
        NEW.Examination_Date IS NULL OR
        NEW.Examination_Date > CURRENT_DATE
    ) THEN
        RAISE EXCEPTION 'Grades can only be recorded after the examination date has passed.';
    END IF;

    -- Check if the diploma is in 'under examination' status (status 4)
    IF NOT EXISTS (
        SELECT 1
        FROM Diploma_Status_History dsh
        WHERE dsh.Diploma_ID = NEW.Diploma_ID
          AND dsh.New_Status_ID = 4
    ) THEN
        RAISE EXCEPTION 'Grades can only be recorded for diplomas under examination.';
    END IF;

    RETURN NEW;
END;
$$;


ALTER FUNCTION public.ensure_grading_allowed() OWNER TO web;

--
-- TOC entry 248 (class 1255 OID 19677)
-- Name: validate_cancel_information_insert(); Type: FUNCTION; Schema: public; Owner: web
--

CREATE FUNCTION public.validate_cancel_information_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Έλεγχος αν η διπλωματική είναι σε κατάσταση Active (ID 3)
    IF NOT EXISTS (
        SELECT 1
        FROM Diploma_Status_History dsh
        WHERE dsh.Diploma_ID = NEW.Canceled_Diploma_ID
          AND dsh.New_Status_ID = 3
    ) THEN
        RAISE EXCEPTION 'Cannot add cancellation details unless the diploma is Active (status ID 3).';
    END IF;

    RETURN NEW;
END;
$$;


ALTER FUNCTION public.validate_cancel_information_insert() OWNER TO web;

--
-- TOC entry 249 (class 1255 OID 19670)
-- Name: validate_diploma_status_transition(); Type: FUNCTION; Schema: public; Owner: web
--

CREATE FUNCTION public.validate_diploma_status_transition() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Ελέγχουμε την έγκυρη μετάβαση
    IF NOT (
        (NEW.Previous_Status_ID = 1 AND NEW.New_Status_ID IN (2)) OR
        (NEW.Previous_Status_ID = 2 AND NEW.New_Status_ID IN (1, 3)) OR
        (NEW.Previous_Status_ID = 3 AND NEW.New_Status_ID IN (4, 6)) OR
        (NEW.Previous_Status_ID = 4 AND NEW.New_Status_ID IN (3, 5)) OR
        (NEW.Previous_Status_ID = 6 AND NEW.New_Status_ID IN (2))
    ) THEN
        RAISE EXCEPTION 'Invalid status transition from % to %', 
            NEW.Previous_Status_ID, NEW.New_Status_ID;
    END IF;

    RETURN NEW;
END;
$$;


ALTER FUNCTION public.validate_diploma_status_transition() OWNER TO web;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 233 (class 1259 OID 19702)
-- Name: announcements; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.announcements (
    id integer NOT NULL,
    author integer NOT NULL,
    content text,
    published timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT announcements_content_check CHECK ((length(content) <= 2048))
);


ALTER TABLE public.announcements OWNER TO web;

--
-- TOC entry 232 (class 1259 OID 19701)
-- Name: announcements_id_seq; Type: SEQUENCE; Schema: public; Owner: web
--

CREATE SEQUENCE public.announcements_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.announcements_id_seq OWNER TO web;

--
-- TOC entry 3619 (class 0 OID 0)
-- Dependencies: 232
-- Name: announcements_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: web
--

ALTER SEQUENCE public.announcements_id_seq OWNED BY public.announcements.id;


--
-- TOC entry 226 (class 1259 OID 19578)
-- Name: cancel_information; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.cancel_information (
    canceled_diploma_id integer NOT NULL,
    cancel_reason text NOT NULL,
    cancel_meeting_number integer NOT NULL,
    cancel_meeting_year integer NOT NULL
);


ALTER TABLE public.cancel_information OWNER TO web;

--
-- TOC entry 228 (class 1259 OID 19589)
-- Name: cancelation_request; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.cancelation_request (
    cancelation_request_id integer NOT NULL,
    diploma_id_to_cancel integer,
    cancel_prompt text,
    supervisor_agreed_to_cancel boolean,
    member1_agreed_to_cancel boolean,
    member2_agreed_to_cancel boolean
);


ALTER TABLE public.cancelation_request OWNER TO web;

--
-- TOC entry 227 (class 1259 OID 19588)
-- Name: cancelation_request_cancelation_request_id_seq; Type: SEQUENCE; Schema: public; Owner: web
--

CREATE SEQUENCE public.cancelation_request_cancelation_request_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.cancelation_request_cancelation_request_id_seq OWNER TO web;

--
-- TOC entry 3620 (class 0 OID 0)
-- Dependencies: 227
-- Name: cancelation_request_cancelation_request_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: web
--

ALTER SEQUENCE public.cancelation_request_cancelation_request_id_seq OWNED BY public.cancelation_request.cancelation_request_id;


--
-- TOC entry 221 (class 1259 OID 19510)
-- Name: diploma; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.diploma (
    diploma_id integer NOT NULL,
    title text,
    diploma_subject_description text,
    assigned_to integer,
    supervisor_id integer NOT NULL,
    member1_id integer,
    member2_id integer,
    library_link text,
    date_created_diploma timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    examination_date timestamp with time zone,
    CONSTRAINT diploma_diploma_subject_description_check CHECK ((length(diploma_subject_description) <= 5000)),
    CONSTRAINT diploma_library_link_check CHECK ((length(library_link) <= 2048)),
    CONSTRAINT diploma_title_check CHECK ((length(title) <= 1500))
);


ALTER TABLE public.diploma OWNER TO web;

--
-- TOC entry 220 (class 1259 OID 19509)
-- Name: diploma_diploma_id_seq; Type: SEQUENCE; Schema: public; Owner: web
--

CREATE SEQUENCE public.diploma_diploma_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.diploma_diploma_id_seq OWNER TO web;

--
-- TOC entry 3621 (class 0 OID 0)
-- Dependencies: 220
-- Name: diploma_diploma_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: web
--

ALTER SEQUENCE public.diploma_diploma_id_seq OWNED BY public.diploma.diploma_id;


--
-- TOC entry 223 (class 1259 OID 19543)
-- Name: diploma_states; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.diploma_states (
    diploma_state_id integer NOT NULL,
    diploma_state_name character varying(40) NOT NULL,
    state_description text
);


ALTER TABLE public.diploma_states OWNER TO web;

--
-- TOC entry 222 (class 1259 OID 19542)
-- Name: diploma_states_diploma_state_id_seq; Type: SEQUENCE; Schema: public; Owner: web
--

CREATE SEQUENCE public.diploma_states_diploma_state_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.diploma_states_diploma_state_id_seq OWNER TO web;

--
-- TOC entry 3622 (class 0 OID 0)
-- Dependencies: 222
-- Name: diploma_states_diploma_state_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: web
--

ALTER SEQUENCE public.diploma_states_diploma_state_id_seq OWNED BY public.diploma_states.diploma_state_id;


--
-- TOC entry 225 (class 1259 OID 19554)
-- Name: diploma_status_history; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.diploma_status_history (
    status_history_id integer NOT NULL,
    diploma_id integer,
    previous_status_id integer DEFAULT 1 NOT NULL,
    new_status_id integer DEFAULT 1 NOT NULL,
    changed_by_user_id integer,
    change_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.diploma_status_history OWNER TO web;

--
-- TOC entry 224 (class 1259 OID 19553)
-- Name: diploma_status_history_status_history_id_seq; Type: SEQUENCE; Schema: public; Owner: web
--

CREATE SEQUENCE public.diploma_status_history_status_history_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.diploma_status_history_status_history_id_seq OWNER TO web;

--
-- TOC entry 3623 (class 0 OID 0)
-- Dependencies: 224
-- Name: diploma_status_history_status_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: web
--

ALTER SEQUENCE public.diploma_status_history_status_history_id_seq OWNED BY public.diploma_status_history.status_history_id;


--
-- TOC entry 229 (class 1259 OID 19602)
-- Name: grades; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.grades (
    diploma_id integer NOT NULL,
    supervisor_grade numeric,
    member1_grade numeric,
    member2_grade numeric,
    final_grade numeric,
    CONSTRAINT grades_final_grade_check CHECK (((final_grade >= (0)::numeric) AND (final_grade <= (10)::numeric))),
    CONSTRAINT grades_member1_grade_check CHECK (((member1_grade >= (0)::numeric) AND (member1_grade <= (10)::numeric))),
    CONSTRAINT grades_member2_grade_check CHECK (((member2_grade >= (0)::numeric) AND (member2_grade <= (10)::numeric))),
    CONSTRAINT grades_supervisor_grade_check CHECK (((supervisor_grade >= (0)::numeric) AND (supervisor_grade <= (10)::numeric)))
);


ALTER TABLE public.grades OWNER TO web;

--
-- TOC entry 231 (class 1259 OID 19628)
-- Name: invitation; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.invitation (
    invitation_id integer NOT NULL,
    sent_from integer,
    sent_to integer,
    answer character varying(10) DEFAULT 'Pending'::character varying NOT NULL,
    sent_for integer,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp with time zone,
    CONSTRAINT invitation_answer_check CHECK (((answer)::text = ANY ((ARRAY['Accepted'::character varying, 'Rejected'::character varying, 'Pending'::character varying, 'Deprecated'::character varying])::text[])))
);


ALTER TABLE public.invitation OWNER TO web;

--
-- TOC entry 230 (class 1259 OID 19627)
-- Name: invitation_invitation_id_seq; Type: SEQUENCE; Schema: public; Owner: web
--

CREATE SEQUENCE public.invitation_invitation_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.invitation_invitation_id_seq OWNER TO web;

--
-- TOC entry 3624 (class 0 OID 0)
-- Dependencies: 230
-- Name: invitation_invitation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: web
--

ALTER SEQUENCE public.invitation_invitation_id_seq OWNED BY public.invitation.invitation_id;


--
-- TOC entry 217 (class 1259 OID 19455)
-- Name: professors; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.professors (
    professor_id integer NOT NULL,
    professor_name text NOT NULL,
    professor_surename text NOT NULL,
    professor_email text NOT NULL,
    professor_public_phone_number character varying(15) NOT NULL,
    professor_photo bytea,
    professor_signature bytea,
    professor_department text NOT NULL,
    professor_sector text NOT NULL,
    professor_aboutme text,
    professor_cv bytea,
    professor_website text,
    password text,
    CONSTRAINT professors_professor_aboutme_check CHECK ((length(professor_aboutme) <= 300)),
    CONSTRAINT professors_professor_cv_check CHECK ((octet_length(professor_cv) <= 5000000)),
    CONSTRAINT professors_professor_department_check CHECK ((length(professor_department) <= 255)),
    CONSTRAINT professors_professor_email_check CHECK ((professor_email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text)),
    CONSTRAINT professors_professor_name_check CHECK ((length(professor_name) <= 255)),
    CONSTRAINT professors_professor_photo_check CHECK ((octet_length(professor_photo) <= 2000000)),
    CONSTRAINT professors_professor_public_phone_number_check CHECK (((professor_public_phone_number)::text ~ '^\+?[0-9\s\-]{10,15}$'::text)),
    CONSTRAINT professors_professor_sector_check CHECK ((length(professor_sector) <= 255)),
    CONSTRAINT professors_professor_signature_check CHECK ((octet_length(professor_signature) <= 500000)),
    CONSTRAINT professors_professor_surename_check CHECK ((length(professor_surename) <= 255)),
    CONSTRAINT professors_professor_website_check CHECK ((length(professor_website) <= 2048))
);


ALTER TABLE public.professors OWNER TO web;

--
-- TOC entry 219 (class 1259 OID 19496)
-- Name: secretariat; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.secretariat (
    secretariat_id integer NOT NULL,
    secretariat_public_phone_number character varying(15) NOT NULL,
    secretariat_email text NOT NULL,
    password text,
    CONSTRAINT secretariat_secretariat_email_check CHECK ((secretariat_email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text)),
    CONSTRAINT secretariat_secretariat_public_phone_number_check CHECK (((secretariat_public_phone_number)::text ~ '^\+?[0-9\s\-]{10,15}$'::text))
);


ALTER TABLE public.secretariat OWNER TO web;

--
-- TOC entry 235 (class 1259 OID 19717)
-- Name: student_files; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.student_files (
    id integer NOT NULL,
    student_id integer NOT NULL,
    diploma_id integer NOT NULL,
    file_name character varying(255) NOT NULL,
    file_path character varying(255) NOT NULL,
    upload_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.student_files OWNER TO web;

--
-- TOC entry 234 (class 1259 OID 19716)
-- Name: student_files_id_seq; Type: SEQUENCE; Schema: public; Owner: web
--

CREATE SEQUENCE public.student_files_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.student_files_id_seq OWNER TO web;

--
-- TOC entry 3625 (class 0 OID 0)
-- Dependencies: 234
-- Name: student_files_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: web
--

ALTER SEQUENCE public.student_files_id_seq OWNED BY public.student_files.id;


--
-- TOC entry 218 (class 1259 OID 19477)
-- Name: students; Type: TABLE; Schema: public; Owner: web
--

CREATE TABLE public.students (
    student_id integer NOT NULL,
    student_name text NOT NULL,
    student_surname text NOT NULL,
    student_email text NOT NULL,
    student_phone_number character varying(15),
    student_photo bytea,
    student_signature bytea,
    member_since timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    student_aboutme text,
    ects integer,
    year_of_entrance integer,
    password text,
    CONSTRAINT students_student_aboutme_check CHECK ((length(student_aboutme) <= 301)),
    CONSTRAINT students_student_email_check CHECK ((student_email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text)),
    CONSTRAINT students_student_name_check CHECK ((length(student_name) <= 255)),
    CONSTRAINT students_student_phone_number_check CHECK (((student_phone_number)::text ~ '^\+?[0-9\s\-]{10,15}$'::text)),
    CONSTRAINT students_student_photo_check CHECK ((octet_length(student_photo) <= 2000000)),
    CONSTRAINT students_student_signature_check CHECK ((octet_length(student_signature) <= 500000)),
    CONSTRAINT students_student_surname_check CHECK ((length(student_surname) <= 255)),
    CONSTRAINT students_year_of_entrance_check CHECK ((year_of_entrance > 0))
);


ALTER TABLE public.students OWNER TO web;

--
-- TOC entry 3361 (class 2604 OID 19705)
-- Name: announcements id; Type: DEFAULT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.announcements ALTER COLUMN id SET DEFAULT nextval('public.announcements_id_seq'::regclass);


--
-- TOC entry 3357 (class 2604 OID 19592)
-- Name: cancelation_request cancelation_request_id; Type: DEFAULT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.cancelation_request ALTER COLUMN cancelation_request_id SET DEFAULT nextval('public.cancelation_request_cancelation_request_id_seq'::regclass);


--
-- TOC entry 3350 (class 2604 OID 19513)
-- Name: diploma diploma_id; Type: DEFAULT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma ALTER COLUMN diploma_id SET DEFAULT nextval('public.diploma_diploma_id_seq'::regclass);


--
-- TOC entry 3352 (class 2604 OID 19546)
-- Name: diploma_states diploma_state_id; Type: DEFAULT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_states ALTER COLUMN diploma_state_id SET DEFAULT nextval('public.diploma_states_diploma_state_id_seq'::regclass);


--
-- TOC entry 3353 (class 2604 OID 19557)
-- Name: diploma_status_history status_history_id; Type: DEFAULT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_status_history ALTER COLUMN status_history_id SET DEFAULT nextval('public.diploma_status_history_status_history_id_seq'::regclass);


--
-- TOC entry 3358 (class 2604 OID 19631)
-- Name: invitation invitation_id; Type: DEFAULT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.invitation ALTER COLUMN invitation_id SET DEFAULT nextval('public.invitation_invitation_id_seq'::regclass);


--
-- TOC entry 3363 (class 2604 OID 19720)
-- Name: student_files id; Type: DEFAULT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.student_files ALTER COLUMN id SET DEFAULT nextval('public.student_files_id_seq'::regclass);


--
-- TOC entry 3610 (class 0 OID 19702)
-- Dependencies: 233
-- Data for Name: announcements; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.announcements (id, author, content, published) FROM stdin;
1	333	Ο φοιτητής Αλεξόπουλος Κωνσταντίνος 1093306, θα παρουσιάσει τη διπλωματική του εργασία με τίτλο... στις ... \n\nΑυτό είναι ενα παράδειγμα ανακοίνωσης.\n\n\nΣας προσκαλούμε στο παρακάτω σύνδεσμο να παρακολουθήσετε την εξέταση της διπλωματικής\n\nhttps://zoom.us/signin#/login	2024-12-24 18:31:11.154976
3	222	O φοιτητής του Τμήματος Μηχ/κων Η/Υ & Πληροφορικής κ. Σάββας Στυλιανού\nθα παρουσιάσει τη Διπλωματική του Εργασία με θέμα\n\nΔρομολόγηση Αυτόνομων Εναέριων Οχημάτων\n\nτην Τρίτη 15.10.2024 και ώρα 10:00πμ μέσω του συνδέσμου:\nhttps://upatras-gr.zoom.us/j/99099646898?pwd=c0RZekxHYTBCNnpFLzhIdDBWektvZz09\n\nΗ τριμελής επιτροπή\n\nΧρήστος Ζαρολιάγκης, Καθηγητής Παν. Πατρών (επιβλέπων)\nΣπύρος Κοντογιάννης, Αναπλ. Καθηγητής Παν. Πατρών, μέλος\nΣπύρος Σιούτας, Καθηγητής Παν. Πατρών, μέλος\n\n\n-- \n_____________________________________________________________________\nChristos Zaroliagis        CTI and Dept of Computer Eng & Informatics\nProfessor                  University of Patras, 26504 Patras, Greece\nE:zaro@ceid.upatras.gr              T:+30-2610-996912;+30-2610-960200\nW:https://www.ceid.upatras.gr/webpages/faculty/zaro/	2024-12-25 10:16:12.180814
2	111	Την Τρίτη  2/7/24 στις 12:00\nθα γίνει διαδικτυακά  η εξέταση της προπτυχιακής  διπλωματικής εργασίας του Κωνσταντίνου Δημόπουλου (Α.Μ: 1041735)\nμε Τίτλο: "Μελέτη και Υλοποίηση Εφαρμογής παρουσίασης αποφοίτων για δημιουργία Ταυτότητας (brand) με βάση την Εμπειρία Χρήστη (UX)"\n\nαπό την επιτροπή :\nΕλένη Βογιατζάκη, ΕΔΙΠ\nΜιχάλης Ξένος, Καθηγητής\nΜαρία Ρήγκου, Επ. Καθηγήτρια .\n\nΌσοι επιθυμούν να την παρακολουθήσουν, παρακαλώ να στείλουν mail για να αποσταλεί ο σύνδεσμος.\n\n-- \nΕλένη Ι. Βογιατζάκη\nΕ.ΔΙ.Π.\nΤμήμα Μηχανικών ΗΥ και Πληροφορικής\nΠανεπιστήμιο Πατρών\n\nEleni Voyiatzaki\nB.Sc., Ph.D, Computer Engineer\nLaboratory Lecturer\nComputer Engineering and Informatics Department\nUniversity of Patras	2024-12-25 10:05:56.342136
4	1093306	\nΣώμα μηνύματος\nΤην Πέμπτη, 21 Δεκεμβρίου 2023 και ώρα 12.00 μμ,\n\nΘα πραγματοποιηθεί η παρουσίαση της διπλωματικής εργασίας του φοιτητή του Προγράμματος Προπτυχιακών Σπουδών του Τμήματος,\n\nΑλεξόπουλου Κωνσταντίνου(ΑΜ 1093306)\n\nμε θέμα "Σύστημα Αποφυγής Υπέρβασης του διαδρόμου Απογείωσης/ Προσγείωσης"\n\nστην εικονική αίθουσα:\nhttps://upatras-gr.zoom.us/j/96484623471?pwd=M2xtTHdEaDI2N0IyS3drVmlZUXBWZz09\n \n\nΗ Τριμελής Επιτροπή:\n\n-Κωστόπουλος Βασίλειος, Καθηγητής, Τμήμα Μηχανολόγων και Αεροναυπηγών Μηχανικών (Επιβλέπων)\n-Πλιούτσιας Αναστάσιος, Assistant Professor, EEC School of Future Transport Engineering (FTE), Coventry University\n-Νικολετσέας Σωτήριος, Καθηγητής, Τμήμα Μηχανικών Η/Υ και Πληροφορικής\n	2024-12-25 10:20:03.95721
5	444	Παρουσίαση διπλωματικής εργασίας, στις 8/1/24.	2025-01-08 15:27:54.993888
\.


--
-- TOC entry 3603 (class 0 OID 19578)
-- Dependencies: 226
-- Data for Name: cancel_information; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.cancel_information (canceled_diploma_id, cancel_reason, cancel_meeting_number, cancel_meeting_year) FROM stdin;
\.


--
-- TOC entry 3605 (class 0 OID 19589)
-- Dependencies: 228
-- Data for Name: cancelation_request; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.cancelation_request (cancelation_request_id, diploma_id_to_cancel, cancel_prompt, supervisor_agreed_to_cancel, member1_agreed_to_cancel, member2_agreed_to_cancel) FROM stdin;
\.


--
-- TOC entry 3598 (class 0 OID 19510)
-- Dependencies: 221
-- Data for Name: diploma; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.diploma (diploma_id, title, diploma_subject_description, assigned_to, supervisor_id, member1_id, member2_id, library_link, date_created_diploma, examination_date) FROM stdin;
4	Σημασιολογική αντιστοίχιση δεδομένων μεγάλου όγκου σε γράφους γνώσης με χρήση διανυσμάτων λέξεων	Με την εξάπλωση του Παγκόσμιου Ιστού και την αύξηση του διαθέσιμου αποθηκευτικού χώρου υπάρχουν σήμερα διαθέσιμα μεγάλα σύνολα δεδομένων σε αδόμητη ή ημιδομημένη μορφή, όπως κείμενα και συμβολοσειρές σε μορφή πίνακα ή csv. Η εργασία αυτή θα μελετήσει την δυνατότητα αντιστοίχισης των πληροφοριών αυτών σε δομημένους γράφους γνώσης (knowledge graphs) με χρήση μηχανικής μάθησης και συγκεκριμένα διανυσμάτων λέξεων (word embeddings). Το πρόβλημα αυτό παραμένει ανοιχτό στην πράξη κυρίως λόγω ελλιπών ή αμφίσημων δεδομένων. Η κατανόηση της σημασιακής δομής των δεδομένων αυτών θα βοηθήσει περαιτέρω στη διαδικασία ανάλυσής τους (data analytics).	1093301	333	\N	\N	https://eclass.upatras.gr/	2024-12-29 19:35:04.543105	\N
1	Τεχνητή Νοημοσύνη	εδω εξετάζουμε τεχνιτή νοημοσύνη	1093307	333	111	222	https://eclass.upatras.gr/	2023-01-15 10:00:00	\N
2	Βάσεις Δεδομένων	CRUD operations, μπορεις να τις κάνεις? Η μήπως είσαι απο αυτούς που αφηνουν σκουπίδια στο σύστημα?	1093450	111	333	\N	https://eclass.upatras.gr/	2024-12-12 14:25:52.320726	\N
3	Μικροσυντονισμός (finetuning) πολυγλωσσικών μοντέλων για ταξινόμηση βιοϊατρικής πληροφορίας με μηδενική εκμάθηση (Zero-Shot Learning)	Η ταξινόμηση με μηδενική εκμάθηση (zero-shot classification) βασίζεται στο γεγονός ότι μοντέλα γενικής γλώσσας που έχουν βελτιστοποιηθεί στον συμπερασμό μπορούν να χρησιμοποιηθούν για ταξινόμηση χωρίς ειδική εκπαίδευση σε σύνολα δεδομένων. Μεγάλα μοντέλα γλώσσας έχουν ικανοποιητικά αποτελέσματα με πολύ λιγότερα εξειδικευμένα δεδομένα εκπαίδευσης σε σύγκριση με μικρότερα μοντέλα.Επίσης, προκαλεί έκπληξη το γεγονός ότι πολυγλωσσικά μοντέλα ξεπερνούν αντίστοιχα μονογλωσσικά ακόμα και σε μονογλωσσικές εργασίες. Η παρούσα εργασία θα διερευνήσει κατά πόσο ο μικροσυντονισμός (finetuning) ενός προεκπαιδευμένου μοντέλου μπορεί να βοηθήσει στην απόδοση και την ακρίβεια της τεχνικής μηδενικής εκμάθησης. Για τον μικροσυντονισμό μπορούν να χρησιμοποιηθούν σώματα βιοϊατρικών κειμένων ή και οι αναπαραστάσεις των κλάσεων ταξινόμησης (για παράδειγμα, οντολογία σε λεκτική περιγραφή). Απώτερος στόχος είναι να επιτευχθεί εξοικονόμηση πόρων και ταξινόμηση σε πραγματικό χρόνο.	1093306	333	222	111	https://eclass.upatras.gr/	2024-12-15 20:00:58.699237	\N
13	Post Von Neumann\nΑρχιτεκτονικές Υπολογιστικών\nΜηχανών (in/near-memory\ncomputing, memristors)	Σχεδίαση και υλοποίηση\nσυστήματος έγχυσης\nαπειλών αξιοπιστίας\n(σφαλμάτων/\nγήρανσης/κακόβουλου-\nλογισμικού/απώλεια-\nισχύος) και εκτίμηση των\nσυνέπειών τους σε\nεικονικoύς/πειραματικούς\nυπολογιστές (π.χ. gem5,\nodroid)	1093302	111	\N	\N	\N	2025-01-08 15:58:17.393348	\N
\.


--
-- TOC entry 3600 (class 0 OID 19543)
-- Dependencies: 223
-- Data for Name: diploma_states; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.diploma_states (diploma_state_id, diploma_state_name, state_description) FROM stdin;
1	Temporary	Ορίζεται κατα τη δημιουργία διπλωματικής και μεταβαίνει αυτόματα σε υποανάθεση όταν οριστεί φοιτητής απο το καθηγητή.
2	Under_Assignement	Ο φοιτητής οργανώνει τριμελή επιτροπή και ολοκληρώνει διαδικαστικά θέματα. Οταν εγκριθεί το πρακτικό αίτησης ορισμού επιβλέποντα και θέματος, αυτόματα η κατάσταση μεταπίπτει σε ενεργή. Ο καθηγητής μπορει ανα πάσα στιγμή να διακόψει την ανάθεση και το θέμα μεταβαίνει στην αρχική κατάσταση.
3	Active	Ο φοιτητής εκπονεί την εργασία του για τουλάχιστον 6 μήνες, οποιαδήποτε απόπειρα διακοπής απαιτεί την εγκριση της τριμελούς και συνεπάγει ακύρωση. Αυτή ειναι η μόνη κατάσταση που επιτρέπεται επίσημη ακύρωση, ο καθηγητής ή η γραματεία μπορουν να την επιβάλλουν μόνο αν έχουν παρέλθει 2 χρόνια. Ο καθηγητής έχει τον έλεγχο για μετάπτωση της κατάστασης σε υποεξέταση
4	Under_Examination	Ο καθηγητής εχει αποφασίσει οτι ο φοιτητής ειναι έτοιμος να ξεκινήσει τη διαδικασία της εξέτασης. Το πρόχειρο της διπλωματικής είναι ορατό στην τριμελή επιτροπή, η οποια πρέπει σε τουλάχιστον 3 βδομάδες και λιγότερο 2 μήνες να αξιολογήσει την ποιότητά της. Ο φοιτητής ορίζει σε συνενόηση με τους καθηγητές ημερομηνία εξέτασης, παρουσιάζει και δέχεται βαθμολόγιση. Τελειώνοντας στέλνει πρακτικό εξέτασης στη γραματεία και καταθέτει τη διπλωματική του στην ηλεκτρονική βιβλιοθήκη. Αν η γραμματεία εγγρίνει το πρακτικό εξέτασης η κατάσταση της διπλωματικής μεταπίπτει αυτόματα σε Ολοκληρωμένη. Αν ο καθηγητής ή ο φοιτητής επιθυμούν ακύρωση, η κατάσταση πρέπει να αλλάξει χειροκείνητα πρώτα σε ενεργή.
5	Completed	Η διπλωματική εχει ολοκληρωθεί και καθιστάται μη τροποποιήσιμη.
6	Canceled	Ο καθηγητής ή η γραμματεία έχουν διακόψει την ολοκλήρωση της διπλωματικής ήτε για λόγους φοιτητή ή για λόγους διδάσκοντα, στα πρακτικά καταγράφονται υποχρεωτικά λεπτομέριες που δικαιολογούν την ακύρωση.
\.


--
-- TOC entry 3602 (class 0 OID 19554)
-- Dependencies: 225
-- Data for Name: diploma_status_history; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.diploma_status_history (status_history_id, diploma_id, previous_status_id, new_status_id, changed_by_user_id, change_date) FROM stdin;
4	1	1	1	333	2024-12-10 14:53:32.111581
8	2	1	1	111	2024-12-12 14:25:52.320726
9	3	1	1	333	2024-12-15 20:00:58.699237
11	4	1	1	333	2024-12-29 19:41:38.099237
15	2	2	1	333	2024-12-30 15:50:10.283127
16	2	1	2	333	2024-12-30 15:54:02.935636
17	3	2	3	1093306	2025-01-02 16:18:29.951089
\.


--
-- TOC entry 3606 (class 0 OID 19602)
-- Dependencies: 229
-- Data for Name: grades; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.grades (diploma_id, supervisor_grade, member1_grade, member2_grade, final_grade) FROM stdin;
\.


--
-- TOC entry 3608 (class 0 OID 19628)
-- Dependencies: 231
-- Data for Name: invitation; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.invitation (invitation_id, sent_from, sent_to, answer, sent_for, created_at, updated_at) FROM stdin;
7	1093307	222	Accepted	1	2024-12-25 22:50:29.431297+02	2024-12-26 20:43:58.684877+02
6	1093450	222	Pending	2	2024-12-25 20:16:19.879396+02	2024-12-27 00:46:36.445029+02
5	1093306	111	Accepted	3	2024-12-25 20:16:19.879396+02	2025-01-02 16:18:29.951089+02
9	1093302	333	Pending	4	2025-01-08 15:50:49.13436+02	\N
8	1093301	333	Pending	4	2025-01-08 15:50:11.685489+02	\N
\.


--
-- TOC entry 3594 (class 0 OID 19455)
-- Dependencies: 217
-- Data for Name: professors; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.professors (professor_id, professor_name, professor_surename, professor_email, professor_public_phone_number, professor_photo, professor_signature, professor_department, professor_sector, professor_aboutme, professor_cv, professor_website, password) FROM stdin;
222	Καθηγητής 222	Προσκλητικος	kathigitis222@ceid.upatras.gr	2105674921	\N	\N	ceid	code_quality	\N	\N	\N	pass
333	Καθηγητής 333	Διπλωματικός	kathigitis333@ceid.upatras.gr	2109234970	\N	\N	ceid	Artificial_Intelligence	\N	\N	\N	pass
111	Καθηγητής 111	Πολλαπλος	kathigitis111@ceid.upatras.gr	2102545645	\N	\N	ceid	software	\N	\N	\N	pass
444	Καθηγητής 444	Βοηθητικός	kathigitis444@gmail.com	2101234098	\N	\N	ceid	code_quality	\N	\N	\N	pass
\.


--
-- TOC entry 3596 (class 0 OID 19496)
-- Dependencies: 219
-- Data for Name: secretariat; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.secretariat (secretariat_id, secretariat_public_phone_number, secretariat_email, password) FROM stdin;
666	2105624829	secretariat@email.contact.us	pass
\.


--
-- TOC entry 3612 (class 0 OID 19717)
-- Dependencies: 235
-- Data for Name: student_files; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.student_files (id, student_id, diploma_id, file_name, file_path, upload_date) FROM stdin;
5	1093306	3	1735823579640-2024.pdf	src/uploads/studentFiles/1735823579640-2024.pdf	2025-01-02 15:12:59.690146
6	1093306	3	1735824343860-3_73_.pdf	src/uploads/studentFiles/1735824343860-3_73_.pdf	2025-01-02 15:25:43.890251
7	1093306	3	1735840012510-3_73_.pdf	src/uploads/studentFiles/1735840012510-3_73_.pdf	2025-01-02 19:46:52.542343
\.


--
-- TOC entry 3595 (class 0 OID 19477)
-- Dependencies: 218
-- Data for Name: students; Type: TABLE DATA; Schema: public; Owner: web
--

COPY public.students (student_id, student_name, student_surname, student_email, student_phone_number, student_photo, student_signature, member_since, student_aboutme, ects, year_of_entrance, password) FROM stdin;
1093306	Κωνσταντίνος	Αλεξόπουλος	up1093306@upatras.gr	6912432458	\N	\N	\N	Building Websites	\N	2021	pass
1093307	Βαγγέλης	Παπαδόπουλος	up1093307@upatras.gr	6942345829	\N	\N	\N	I dont exist	50	2021	pass
1093301	Υποθετικος	Φοιτητής	up1093301@upatras.gr	1234213121	\N	\N	2025-01-08 15:11:24.699932	Hello	\N	2021	pass
1093302	Ιπτάμενος	Πιγκουίνος	up1093302@upatras.gr	1234567890	\N	\N	2025-01-08 15:13:57.062872	I am flying penguin	\N	2020	pass
1093303	Δημητρα	Παπαδοπουλου	up1093303@upagras.gr	1234562819	\N	\N	2025-01-08 15:15:08.748188	Geiasas	\N	2019	pass
1093304	Γιώργος	Γεωργίου	up1093306@upagras.gr	\N	\N	\N	2025-01-08 15:16:34.637447	\N	\N	2018	pass
1093450	Παναγιώτης	Παναγιώτου	up1093450@upatras.gr	\N	\N	\N	\N	Hello	\N	2021	pass
\.


--
-- TOC entry 3626 (class 0 OID 0)
-- Dependencies: 232
-- Name: announcements_id_seq; Type: SEQUENCE SET; Schema: public; Owner: web
--

SELECT pg_catalog.setval('public.announcements_id_seq', 5, true);


--
-- TOC entry 3627 (class 0 OID 0)
-- Dependencies: 227
-- Name: cancelation_request_cancelation_request_id_seq; Type: SEQUENCE SET; Schema: public; Owner: web
--

SELECT pg_catalog.setval('public.cancelation_request_cancelation_request_id_seq', 1, false);


--
-- TOC entry 3628 (class 0 OID 0)
-- Dependencies: 220
-- Name: diploma_diploma_id_seq; Type: SEQUENCE SET; Schema: public; Owner: web
--

SELECT pg_catalog.setval('public.diploma_diploma_id_seq', 13, true);


--
-- TOC entry 3629 (class 0 OID 0)
-- Dependencies: 222
-- Name: diploma_states_diploma_state_id_seq; Type: SEQUENCE SET; Schema: public; Owner: web
--

SELECT pg_catalog.setval('public.diploma_states_diploma_state_id_seq', 6, true);


--
-- TOC entry 3630 (class 0 OID 0)
-- Dependencies: 224
-- Name: diploma_status_history_status_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: web
--

SELECT pg_catalog.setval('public.diploma_status_history_status_history_id_seq', 22, true);


--
-- TOC entry 3631 (class 0 OID 0)
-- Dependencies: 230
-- Name: invitation_invitation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: web
--

SELECT pg_catalog.setval('public.invitation_invitation_id_seq', 9, true);


--
-- TOC entry 3632 (class 0 OID 0)
-- Dependencies: 234
-- Name: student_files_id_seq; Type: SEQUENCE SET; Schema: public; Owner: web
--

SELECT pg_catalog.setval('public.student_files_id_seq', 7, true);


--
-- TOC entry 3428 (class 2606 OID 19711)
-- Name: announcements announcements_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.announcements
    ADD CONSTRAINT announcements_pkey PRIMARY KEY (id);


--
-- TOC entry 3422 (class 2606 OID 19596)
-- Name: cancelation_request cancelation_request_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.cancelation_request
    ADD CONSTRAINT cancelation_request_pkey PRIMARY KEY (cancelation_request_id);


--
-- TOC entry 3414 (class 2606 OID 19521)
-- Name: diploma diploma_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma
    ADD CONSTRAINT diploma_pkey PRIMARY KEY (diploma_id);


--
-- TOC entry 3416 (class 2606 OID 19552)
-- Name: diploma_states diploma_states_diploma_state_name_key; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_states
    ADD CONSTRAINT diploma_states_diploma_state_name_key UNIQUE (diploma_state_name);


--
-- TOC entry 3418 (class 2606 OID 19550)
-- Name: diploma_states diploma_states_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_states
    ADD CONSTRAINT diploma_states_pkey PRIMARY KEY (diploma_state_id);


--
-- TOC entry 3420 (class 2606 OID 19562)
-- Name: diploma_status_history diploma_status_history_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_status_history
    ADD CONSTRAINT diploma_status_history_pkey PRIMARY KEY (status_history_id);


--
-- TOC entry 3424 (class 2606 OID 19612)
-- Name: grades grades_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.grades
    ADD CONSTRAINT grades_pkey PRIMARY KEY (diploma_id);


--
-- TOC entry 3426 (class 2606 OID 19634)
-- Name: invitation invitation_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.invitation
    ADD CONSTRAINT invitation_pkey PRIMARY KEY (invitation_id);


--
-- TOC entry 3396 (class 2606 OID 19472)
-- Name: professors professors_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.professors
    ADD CONSTRAINT professors_pkey PRIMARY KEY (professor_id);


--
-- TOC entry 3398 (class 2606 OID 19474)
-- Name: professors professors_professor_email_key; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.professors
    ADD CONSTRAINT professors_professor_email_key UNIQUE (professor_email);


--
-- TOC entry 3400 (class 2606 OID 19476)
-- Name: professors professors_professor_public_phone_number_key; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.professors
    ADD CONSTRAINT professors_professor_public_phone_number_key UNIQUE (professor_public_phone_number);


--
-- TOC entry 3408 (class 2606 OID 19504)
-- Name: secretariat secretariat_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.secretariat
    ADD CONSTRAINT secretariat_pkey PRIMARY KEY (secretariat_id);


--
-- TOC entry 3410 (class 2606 OID 19508)
-- Name: secretariat secretariat_secretariat_email_key; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.secretariat
    ADD CONSTRAINT secretariat_secretariat_email_key UNIQUE (secretariat_email);


--
-- TOC entry 3412 (class 2606 OID 19506)
-- Name: secretariat secretariat_secretariat_public_phone_number_key; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.secretariat
    ADD CONSTRAINT secretariat_secretariat_public_phone_number_key UNIQUE (secretariat_public_phone_number);


--
-- TOC entry 3430 (class 2606 OID 19725)
-- Name: student_files student_files_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.student_files
    ADD CONSTRAINT student_files_pkey PRIMARY KEY (id);


--
-- TOC entry 3402 (class 2606 OID 19491)
-- Name: students students_pkey; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_pkey PRIMARY KEY (student_id);


--
-- TOC entry 3404 (class 2606 OID 19493)
-- Name: students students_student_email_key; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_student_email_key UNIQUE (student_email);


--
-- TOC entry 3406 (class 2606 OID 19495)
-- Name: students students_student_phone_number_key; Type: CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_student_phone_number_key UNIQUE (student_phone_number);


--
-- TOC entry 3447 (class 2620 OID 19678)
-- Name: cancel_information check_active_status_for_cancellation; Type: TRIGGER; Schema: public; Owner: web
--

CREATE TRIGGER check_active_status_for_cancellation BEFORE INSERT ON public.cancel_information FOR EACH ROW EXECUTE FUNCTION public.validate_cancel_information_insert();


--
-- TOC entry 3444 (class 2620 OID 19676)
-- Name: diploma trg_check_exam_date_rules; Type: TRIGGER; Schema: public; Owner: web
--

CREATE TRIGGER trg_check_exam_date_rules BEFORE INSERT OR UPDATE ON public.diploma FOR EACH ROW EXECUTE FUNCTION public.ensure_exam_date_rules();


--
-- TOC entry 3448 (class 2620 OID 19674)
-- Name: grades trg_check_grading_rules; Type: TRIGGER; Schema: public; Owner: web
--

CREATE TRIGGER trg_check_grading_rules BEFORE INSERT OR UPDATE ON public.grades FOR EACH ROW EXECUTE FUNCTION public.ensure_grading_allowed();


--
-- TOC entry 3445 (class 2620 OID 19685)
-- Name: diploma trg_delete_diploma_status_history; Type: TRIGGER; Schema: public; Owner: web
--

CREATE TRIGGER trg_delete_diploma_status_history AFTER DELETE ON public.diploma FOR EACH ROW EXECUTE FUNCTION public.delete_diploma_status_history();


--
-- TOC entry 3446 (class 2620 OID 19671)
-- Name: diploma_status_history trg_validate_diploma_status_transition; Type: TRIGGER; Schema: public; Owner: web
--

CREATE TRIGGER trg_validate_diploma_status_transition BEFORE INSERT OR UPDATE ON public.diploma_status_history FOR EACH ROW EXECUTE FUNCTION public.validate_diploma_status_transition();

ALTER TABLE public.diploma_status_history DISABLE TRIGGER trg_validate_diploma_status_transition;


--
-- TOC entry 3439 (class 2606 OID 19597)
-- Name: cancelation_request fk_cancelation_reffers_to_diploma; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.cancelation_request
    ADD CONSTRAINT fk_cancelation_reffers_to_diploma FOREIGN KEY (diploma_id_to_cancel) REFERENCES public.diploma(diploma_id);


--
-- TOC entry 3438 (class 2606 OID 19583)
-- Name: cancel_information fk_canceled_diploma; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.cancel_information
    ADD CONSTRAINT fk_canceled_diploma FOREIGN KEY (canceled_diploma_id) REFERENCES public.diploma(diploma_id);


--
-- TOC entry 3431 (class 2606 OID 19522)
-- Name: diploma fk_diploma_can_only_be_assigned_to_student_id; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma
    ADD CONSTRAINT fk_diploma_can_only_be_assigned_to_student_id FOREIGN KEY (assigned_to) REFERENCES public.students(student_id);


--
-- TOC entry 3440 (class 2606 OID 19613)
-- Name: grades fk_grade_can_only_match_a_diploma; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.grades
    ADD CONSTRAINT fk_grade_can_only_match_a_diploma FOREIGN KEY (diploma_id) REFERENCES public.diploma(diploma_id);


--
-- TOC entry 3432 (class 2606 OID 19532)
-- Name: diploma fk_member1_can_only_be_professor; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma
    ADD CONSTRAINT fk_member1_can_only_be_professor FOREIGN KEY (member1_id) REFERENCES public.professors(professor_id);


--
-- TOC entry 3433 (class 2606 OID 19537)
-- Name: diploma fk_member2_can_only_be_professor; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma
    ADD CONSTRAINT fk_member2_can_only_be_professor FOREIGN KEY (member2_id) REFERENCES public.professors(professor_id);


--
-- TOC entry 3435 (class 2606 OID 19573)
-- Name: diploma_status_history fk_status_after_transition; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_status_history
    ADD CONSTRAINT fk_status_after_transition FOREIGN KEY (new_status_id) REFERENCES public.diploma_states(diploma_state_id);


--
-- TOC entry 3436 (class 2606 OID 19568)
-- Name: diploma_status_history fk_status_before_transition; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_status_history
    ADD CONSTRAINT fk_status_before_transition FOREIGN KEY (previous_status_id) REFERENCES public.diploma_states(diploma_state_id);


--
-- TOC entry 3437 (class 2606 OID 19563)
-- Name: diploma_status_history fk_status_history_diploma; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma_status_history
    ADD CONSTRAINT fk_status_history_diploma FOREIGN KEY (diploma_id) REFERENCES public.diploma(diploma_id);


--
-- TOC entry 3434 (class 2606 OID 19527)
-- Name: diploma fk_supervisor_can_only_be_professor; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.diploma
    ADD CONSTRAINT fk_supervisor_can_only_be_professor FOREIGN KEY (supervisor_id) REFERENCES public.professors(professor_id);


--
-- TOC entry 3441 (class 2606 OID 19695)
-- Name: invitation invitation_sent_for_fkey; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.invitation
    ADD CONSTRAINT invitation_sent_for_fkey FOREIGN KEY (sent_for) REFERENCES public.diploma(diploma_id);


--
-- TOC entry 3442 (class 2606 OID 19635)
-- Name: invitation invitation_sent_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.invitation
    ADD CONSTRAINT invitation_sent_from_fkey FOREIGN KEY (sent_from) REFERENCES public.students(student_id);


--
-- TOC entry 3443 (class 2606 OID 19640)
-- Name: invitation invitation_sent_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: web
--

ALTER TABLE ONLY public.invitation
    ADD CONSTRAINT invitation_sent_to_fkey FOREIGN KEY (sent_to) REFERENCES public.professors(professor_id);


-- Completed on 2025-01-08 16:17:55 EET

--
-- PostgreSQL database dump complete
--

-- Completed on 2025-01-08 16:17:55 EET

--
-- PostgreSQL database cluster dump complete
--

